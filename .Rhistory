necesarios <- c("dpylr")
if (length(setdiff(necesarios, rownames(installed.packages()))) > 0) {
install.packages(setdiff(necesarios, rownames(installed.packages())))
}
knitr::opts_chunk$set(echo = TRUE)
install.packages("dpylr")
necesarios <- c("dpylr")
if (length(setdiff(necesarios, rownames(installed.packages()))) > 0) {
install.packages(setdiff(necesarios, rownames(installed.packages())))
}
install.packages("dpylr")
necesarios <- c("dpylr")
if (length(setdiff(necesarios, rownames(installed.packages()))) > 0) {
install.packages(setdiff(necesarios, rownames(installed.packages())))
}
library("dpylr")
install.packages("dpylr")
necesarios <- c("dpylr")
if (length(setdiff(necesarios, rownames(installed.packages()))) > 0) {
install.packages(setdiff(necesarios, rownames(installed.packages())))
}
library(dpylr)
necesarios <- c("dplyr")
if (length(setdiff(necesarios, rownames(installed.packages()))) > 0) {
install.packages(setdiff(necesarios, rownames(installed.packages())))
}
library(dplyr)
nacFL = filter(nac, Estados == "FL")
nacFL = filter(nac, Estado=="FL")
días=as.numeric(as.Date(nacAZr$Fecha,"%Y-%m-%d")-as.Date("1969-01-01","%Y-%m-%d"))
días=as.numeric(as.Date(nacFLr$Fecha,"%Y-%m-%d")-as.Date("1969-01-01","%Y-%m-%d"))
nacFL = filter(nac, Estado=="FL") #Filtramos la información
nacFLr = select(nacFL, Fecha, Numero-de-nacimientos)
nacFL = filter(nac, Estado=="FL") #Filtramos la información
nacFLr = select(nacFL, Fecha, Número-de-nacimientos)
#Leemos el fichero Nac.csv
nac = read.csv("Nac.csv", header = FALSE, sep=";")
#Cabeceras
names(nac) = c("Numero-de-orden", "Estado", "Año", "Mes", "Dia", "Fecha",
"Dia-de-la-semana", "Numero-de-nacimientos")
#Primeros 100 Estados
Estados = unique(nac$Estado)
#Florida (FL) es el estado numero 10 en orden alfabético
Estados[10]
necesarios <- c("dplyr")
if (length(setdiff(necesarios, rownames(installed.packages()))) > 0) {
install.packages(setdiff(necesarios, rownames(installed.packages())))
}
library(dplyr)
nacFL = filter(nac, Estado=="FL") #Filtramos la información
nacFLr = select(nacFL, Fecha, Número-de-nacimientos)
nacFL = filter(nac, Estado=="FL") #Filtramos la información
nacFLr = select(nacFL, Fecha, Numero-de-nacimientos)
#Leemos el fichero Nac.csv
nac = read.csv("Nac.csv", header = FALSE, sep=";")
#Cabeceras
names(nac) = c("Numero-de-orden", "Estado", "Año", "Mes", "Dia", "Fecha",
"Dia-de-la-semana", "Numero_de_nacimientos")
#Primeros 100 Estados
Estados = unique(nac$Estado)
#Florida (FL) es el estado numero 10 en orden alfabético
Estados[10]
#Leemos el fichero Nac.csv
nac = read.csv("Nac.csv", header = FALSE, sep=";")
#Cabeceras
names(nac) = c("Numero_de_orden", "Estado", "Año", "Mes", "Dia", "Fecha",
"Dia_de_la_semana", "Numero_de_nacimientos")
#Primeros 100 Estados
Estados = unique(nac$Estado)
#Florida (FL) es el estado numero 10 en orden alfabético
Estados[10]
necesarios <- c("dplyr")
if (length(setdiff(necesarios, rownames(installed.packages()))) > 0) {
install.packages(setdiff(necesarios, rownames(installed.packages())))
}
library(dplyr)
nacFL = filter(nac, Estado=="FL") #Filtramos la información
nacFLr = select(nacFL, Fecha, Numero_de_nacimientos)
días=as.numeric(as.Date(nacFLr$Fecha,"%Y-%m-%d")-as.Date("1969-01-01","%Y-%m-%d"))
dias=as.numeric(as.Date(nacFLr$Fecha,"%Y-%m-%d")-as.Date("1969-01-01","%Y-%m-%d"))
dias
dias=as.numeric(as.Date(nacFLr$Fecha,"%Y-%m-%d")-as.Date("1969-01-01","%Y-%m-%d"))
#Añadimos la columna dias al dataframe
nacFLrd=cbind(nacAKr,días)
dias=as.numeric(as.Date(nacFLr$Fecha,"%Y-%m-%d")-as.Date("1969-01-01","%Y-%m-%d"))
#Añadimos la columna dias al dataframe
nacFLrd=cbind(nacAKr,dias)
dias=as.numeric(as.Date(nacFLr$Fecha,"%Y-%m-%d")-as.Date("1969-01-01","%Y-%m-%d"))
#Añadimos la columna dias al dataframe
nacFLrd=cbind(nacFLr,dias)
#Calcular el día del ciclo lunar sabiendo que el 1-1-1969 era el 12avo dia del ciclo
dia_ciclo_lunar=as.numeric(floor((nacFLrd$dias+12)-floor((nacFLrd$dias+12)/29.53)*29.53))
dias=as.numeric(as.Date(nacFLr$Fecha,"%Y-%m-%d")-as.Date("1969-01-01","%Y-%m-%d"))
#Añadimos la columna dias al dataframe
nacFLrd=cbind(nacFLr,dias)
#Calcular el día del ciclo lunar sabiendo que el 1-1-1969 era el 12avo dia del ciclo
dia_ciclo_lunar=as.numeric(floor((nacFLrd$dias+12)-floor((nacFLrd$dias+12)/29.53)*29.53))
nacFLrdl = cbind(nacFLrd, dia_ciclo_lunar)
lm(nacFLrdl$Número_de_nacimientos~nacFLrdl$día_ciclo_lunar)
lm(nacFLrdl$Numero_de_nacimientos~nacFLrdl$dia_ciclo_lunar)
plot(nacFLrdl$dia_ciclo_lunar, nacFLrdl$Numero_de_nacimientos)
abline(lm(nacFLrdl$Numero_de_nacimientos~nacFLrdl$dia_ciclo_lunar))
plot(nacFLrdl$dia_ciclo_lunar, nacFLrdl$Numero_de_nacimientos)
abline(lm(nacFLrdl$Numero_de_nacimientos~nacFLrdl$dia_ciclo_lunar))
plot(nacFLrdl$dia_ciclo_lunar, nacFLrdl$Numero_de_nacimientos)
abline(lm(nacFLrdl$Numero_de_nacimientos~nacFLrdl$dia_ciclo_lunar))
cor(nacFLrdl$Numero_de_nacimientos,nacFLrdl$dia_ciclo_lunar)
Pearson = cor(nacFLrdl$Numero_de_nacimientos,nacFLrdl$dia_ciclo_lunar)
Pearson = cor(nacFLrdl$Numero_de_nacimientos,nacFLrdl$dia_ciclo_lunar)
Pearson
# Vector de sumas
acumdcl=1:30
# Hacemos un ciclo for para cada día del ciclo lunar y sumamos la columna de Número_de_acimientos para las filas cuyo dïa del ciclop lunar coincida con la variable índice del ciclo
for(i in 1:30){acumdcl[i]=sum(nacFLrdl$Numero_de_nacimientos[which(nacFLrdl$dia_ciclo_lunar==i-1)])}
# Diagrama de barras de nacimientos por día_ciclo_lunar
barplot(acumdcl)
#Calcular el día del ciclo lunar sabiendo que el 1-1-1969 era el 12avo dia del ciclo
dia_semana=as.numeric(floor((nacFLrd$dias+3)-floor((nacFLrd$dias+3)/7)*7))
nacFLrdl = cbind(nacFLrd, dia_semana)
View(nacFLrd)
View(nacFLrdl)
knitr::opts_chunk$set(echo = TRUE)
#Leemos el fichero Nac.csv
nac = read.csv("Nac.csv", header = FALSE, sep=";")
#Cabeceras
names(nac) = c("Numero_de_orden", "Estado", "Año", "Mes", "Dia", "Fecha",
"Dia_de_la_semana", "Numero_de_nacimientos")
#Primeros 100 Estados
Estados = unique(nac$Estado)
#Florida (FL) es el estado numero 10 en orden alfabético
Estados[10]
necesarios <- c("dplyr")
if (length(setdiff(necesarios, rownames(installed.packages()))) > 0) {
install.packages(setdiff(necesarios, rownames(installed.packages())))
}
library(dplyr)
nacFL = filter(nac, Estado=="FL") #Filtramos la información
nacFLr = select(nacFL, Fecha, Numero_de_nacimientos)
dias=as.numeric(as.Date(nacFLr$Fecha,"%Y-%m-%d")-as.Date("1969-01-01","%Y-%m-%d"))
#Añadimos la columna dias al dataframe
nacFLrd=cbind(nacFLr,dias)
#Calcular el día del ciclo lunar sabiendo que el 1-1-1969 era el 12avo dia del ciclo
dia_ciclo_lunar=as.numeric(floor((nacFLrd$dias+12)-floor((nacFLrd$dias+12)/29.53)*29.53))
nacFLrdl = cbind(nacFLrd, dia_ciclo_lunar)
lm(nacFLrdl$Numero_de_nacimientos~nacFLrdl$dia_ciclo_lunar)
plot(nacFLrdl$dia_ciclo_lunar, nacFLrdl$Numero_de_nacimientos)
abline(lm(nacFLrdl$Numero_de_nacimientos~nacFLrdl$dia_ciclo_lunar))
Pearson = cor(nacFLrdl$Numero_de_nacimientos,nacFLrdl$dia_ciclo_lunar)
Pearson
# Vector de sumas
acumdcl=1:30
# Hacemos un ciclo for para cada día del ciclo lunar y sumamos la columna de Número_de_acimientos para las filas cuyo dïa del ciclop lunar coincida con la variable índice del ciclo
for(i in 1:30){acumdcl[i]=sum(nacFLrdl$Numero_de_nacimientos[which(nacFLrdl$dia_ciclo_lunar==i-1)])}
# Diagrama de barras de nacimientos por día_ciclo_lunar
barplot(acumdcl)
#Calcular el día del ciclo lunar sabiendo que el 1-1-1969 era el 12avo dia del ciclo
dia_semana=as.numeric(floor((nacFLrd$dias+2)-floor((nacFLrd$dias+2)/7)*7))
nacFLrdl = cbind(nacFLrd, dia_semana)
View(nacFLrdl)
#Calcular el día del ciclo lunar sabiendo que el 1-1-1969 era el 12avo dia del ciclo
dia_semana=as.numeric(nacFLrd$dias+2)-floor((nacFLrd$dias+2)/7)*7)
#Calcular el día del ciclo lunar sabiendo que el 1-1-1969 era el 12avo dia del ciclo
dia_semana=as.numeric(floor((nacFLrd$dias+2)-floor((nacFLrd$dias+2)/7)*7))
nacFLrdl = cbind(nacFLrd, dia_semana)
View(nacFLrdl)
29.53/7
plot(nacFLrdl$dia_semana, nacFLrdl$Numero_de_nacimientos)
abline(lm(nacFLrdl$Numero_de_nacimientos~nacFLrdl$dia_semana))
Pearson = cor(nacFLrdl$Numero_de_nacimientos,nacFLrdl$dia_semana)
Pearson
acumdcl=1:30
for(i in 1:30){acumdcl[i]=sum(nacFLrdl$Numero_de_nacimientos[which(nacFLrdl$dia_semana==i-1)])}
barplot(acumdcl)
acumdcl=1:30
for(i in 1:30){acumdcl[i]=sum(nacFLrdl$Numero_de_nacimientos[which(nacFLrdl$dia_semana==i-1)])}
barplot(acumdcl)
58152-48723
View(nacFLrdl)
View(nacFLrdl)
nacFLrdl = filter(nacFLrdl, Fecja < "1975-01-01")
nacFLcheck = filter(nacFLrdl, Fecja < "1975-01-01")
nacFLcheck = filter(nacFLrdl, Fecha < "1975-01-01")
nacFLcheck = filter(nacFLrdl, Fecha < "1975-01-01")
nacFLcheck = filter(nacFLrdl, Fecha < "1975-01-01")
acumdcl=1:30
for(i in 1:30){acumdcl[i]=sum(nacFLcheck$Numero_de_nacimientos[which(nacFLcheck$dia_semana==i-1)])}
barplot(acumdcl)
nacFLcheck = filter(nacFLrdl, Fecha < "1973-01-01")
acumdcl=1:30
for(i in 1:30){acumdcl[i]=sum(nacFLcheck$Numero_de_nacimientos[which(nacFLcheck$dia_semana==i-1)])}
barplot(acumdcl)
nacFLcheck = filter(nacFLrdl, Fecha < "1970-01-01")
acumdcl=1:30
for(i in 1:30){acumdcl[i]=sum(nacFLcheck$Numero_de_nacimientos[which(nacFLcheck$dia_semana==i-1)])}
barplot(acumdcl)
nacFLcheck = filter(nacFLrdl, Fecha < "1971-01-01")
acumdcl=1:30
for(i in 1:30){acumdcl[i]=sum(nacFLcheck$Numero_de_nacimientos[which(nacFLcheck$dia_semana==i-1)])}
barplot(acumdcl)
nacFLcheck = filter(nacFLrdl, Fecha < "1971-01-01")
Pearson = cor(nacFLcheck$Numero_de_nacimientos,nacFLcheck$dia_semana)
Pearson
View(nacFLcheck)
View(nacFLcheck)
nacFLcheck = filter(nacFLrdl, Fecha < "1979-01-01")
Pearson = cor(nacFLcheck$Numero_de_nacimientos,nacFL$dia_semana)
nacFLcheck = filter(nacFLrdl, Fecha < "1979-01-01")
Pearson = cor(nacFLcheck$Numero_de_nacimientos,nacFLcheck$dia_semana)
Pearson
nacFLcheck = filter(nacFLrdl, Fecha > "2005-01-01")
Pearson = cor(nacFLcheck$Numero_de_nacimientos,nacFLcheck$dia_semana)
Pearson
nacFLcheck = filter(nacFLrdl, Fecha > "2005-01-01")
Pearson = cor(nacFLcheck$Numero_de_nacimientos,nacFLcheck$dia_semana)
Pearson
knitr::opts_chunk$set(echo = TRUE)
#Leemos el fichero Nac.csv
nac = read.csv("Nac.csv", header = FALSE, sep=";")
#Cabeceras
names(nac) = c("Numero_de_orden", "Estado", "Año", "Mes", "Dia", "Fecha",
"Dia_de_la_semana", "Numero_de_nacimientos")
#Primeros 100 Estados
Estados = unique(nac$Estado)
#Florida (FL) es el estado numero 10 en orden alfabético
Estados[10]
necesarios <- c("dplyr")
if (length(setdiff(necesarios, rownames(installed.packages()))) > 0) {
install.packages(setdiff(necesarios, rownames(installed.packages())))
}
library(dplyr)
nacFL = filter(nac, Estado=="FL") #Filtramos la información
nacFLr = select(nacFL, Fecha, Numero_de_nacimientos)
dias=as.numeric(as.Date(nacFLr$Fecha,"%Y-%m-%d")-as.Date("1969-01-01","%Y-%m-%d"))
#Añadimos la columna dias al dataframe
nacFLrd=cbind(nacFLr,dias)
#Calcular el día del ciclo lunar sabiendo que el 1-1-1969 era el 12avo dia del ciclo
dia_ciclo_lunar=as.numeric(floor((nacFLrd$dias+12)-floor((nacFLrd$dias+12)/29.53)*29.53))
nacFLrdl = cbind(nacFLrd, dia_ciclo_lunar)
lm(nacFLrdl$Numero_de_nacimientos~nacFLrdl$dia_ciclo_lunar)
plot(nacFLrdl$dia_ciclo_lunar, nacFLrdl$Numero_de_nacimientos)
abline(lm(nacFLrdl$Numero_de_nacimientos~nacFLrdl$dia_ciclo_lunar))
Pearson = cor(nacFLrdl$Numero_de_nacimientos,nacFLrdl$dia_ciclo_lunar)
Pearson
# Vector de sumas
acumdcl=1:30
for(i in 1:30){acumdcl[i]=sum(nacFLrdl$Numero_de_nacimientos[which(nacFLrdl$dia_ciclo_lunar==i-1)])}
barplot(acumdcl)
#Calcular el día del ciclo lunar sabiendo que el 1-1-1969 era el 12avo dia del ciclo
dia_semana=as.numeric(floor((nacFLrd$dias+2)-floor((nacFLrd$dias+2)/7)*7))
nacFLrdl = cbind(nacFLrd, dia_semana)
plot(nacFLrdl$dia_semana, nacFLrdl$Numero_de_nacimientos)
abline(lm(nacFLrdl$Numero_de_nacimientos~nacFLrdl$dia_semana))
Pearson = cor(nacFLrdl$Numero_de_nacimientos,nacFLrdl$dia_semana)
Pearson
acumdcl=1:30
for(i in 1:30){acumdcl[i]=sum(nacFLrdl$Numero_de_nacimientos[which(nacFLrdl$dia_semana==i-1)])}
barplot(acumdcl)
nacFLcheck = filter(nacFLrdl, Fecha > "2005-01-01")
Pearson = cor(nacFLcheck$Numero_de_nacimientos,nacFLcheck$dia_semana)
Pearson
View(nacFLr)
View(nacFL)
View(nac)
#Leemos el fichero Nac.csv
nac = read.csv("Nac.csv", header = FALSE, sep=";")
#Cabeceras
names(nac) = c("Numero_de_orden", "Estado", "Año", "Mes", "Dia", "Fecha",
"Dia_de_la_semana", "Numero_de_nacimientos")
#Primeros 100 Estados
Estados = unique(nac$Estado)
#Florida (FL) es el estado numero 10 en orden alfabético
Estados[10]
necesarios <- c("dplyr")
if (length(setdiff(necesarios, rownames(installed.packages()))) > 0) {
install.packages(setdiff(necesarios, rownames(installed.packages())))
}
library(dplyr)
nacFL = filter(nac, Estado=="FL") #Filtramos la información
nacFLr = select(nacFL, Fecha, Numero_de_nacimientos)
dias=as.numeric(as.Date(nacFLr$Fecha,"%Y-%m-%d")-as.Date("1969-01-01","%Y-%m-%d"))
#Añadimos la columna dias al dataframe
nacFLrd=cbind(nacFLr,dias)
#Calcular el día del ciclo lunar sabiendo que el 1-1-1969 era el 12avo dia del ciclo
dia_ciclo_lunar=as.numeric(floor((nacFLrd$dias+12)-floor((nacFLrd$dias+12)/29.53)*29.53))
nacFLrdl = cbind(nacFLrd, dia_ciclo_lunar)
lm(nacFLrdl$Numero_de_nacimientos~nacFLrdl$dia_ciclo_lunar)
plot(nacFLrdl$dia_ciclo_lunar, nacFLrdl$Numero_de_nacimientos)
abline(lm(nacFLrdl$Numero_de_nacimientos~nacFLrdl$dia_ciclo_lunar))
Pearson = cor(nacFLrdl$Numero_de_nacimientos,nacFLrdl$dia_ciclo_lunar)
Pearson
# Vector de sumas
acumdcl=1:30
for(i in 1:30){acumdcl[i]=sum(nacFLrdl$Numero_de_nacimientos[which(nacFLrdl$dia_ciclo_lunar==i-1)])}
barplot(acumdcl)
#Calcular el día del ciclo lunar sabiendo que el 1-1-1969 era el 12avo dia del ciclo
dia_semana=as.numeric(floor((nacFLrd$dias+2)-floor((nacFLrd$dias+2)/7)*7))
nacFLrdl = cbind(nacFLrd, dia_semana)
plot(nacFLrdl$dia_semana, nacFLrdl$Numero_de_nacimientos)
abline(lm(nacFLrdl$Numero_de_nacimientos~nacFLrdl$dia_semana))
Pearson = cor(nacFLrdl$Numero_de_nacimientos,nacFLrdl$dia_semana)
Pearson
acumdcl=1:30
for(i in 1:30){acumdcl[i]=sum(nacFLrdl$Numero_de_nacimientos[which(nacFLrdl$dia_semana==i-1)])}
barplot(acumdcl)
getSeason <- function(DATES) {
WS <- as.Date("2012-12-15", format = "%Y-%m-%d") # Winter Solstice
SE <- as.Date("2012-3-15",  format = "%Y-%m-%d") # Spring Equinox
SS <- as.Date("2012-6-15",  format = "%Y-%m-%d") # Summer Solstice
FE <- as.Date("2012-9-15",  format = "%Y-%m-%d") # Fall Equinox
# Convert dates from any year to 2012 dates
d <- as.Date(strftime(DATES, format="2012-%m-%d"))
ifelse (d >= WS | d < SE, "Winter",
ifelse (d >= SE & d < SS, "Spring",
ifelse (d >= SS & d < FE, "Summer", "Fall")))
}
seasons <- as.numeric(as.Date(nacFLr$Fecha,"%Y-%m-%d")-as.Date("1969-01-01","%Y-%m-%d"))
getSeason <- function(DATES) {
WS <- as.Date("2012-12-15", format = "%Y-%m-%d") # Winter Solstice
SE <- as.Date("2012-3-15",  format = "%Y-%m-%d") # Spring Equinox
SS <- as.Date("2012-6-15",  format = "%Y-%m-%d") # Summer Solstice
FE <- as.Date("2012-9-15",  format = "%Y-%m-%d") # Fall Equinox
# Convert dates from any year to 2012 dates
d <- as.Date(strftime(DATES, format="2012-%m-%d"))
ifelse (d >= WS | d < SE, "Winter",
ifelse (d >= SE & d < SS, "Spring",
ifelse (d >= SS & d < FE, "Summer", "Fall")))
}
seasons <- as.numeric(as.Date(nacFLr$Fecha,"%Y-%m-%d")-as.Date("1969-01-01","%Y-%m-%d"))
seasons <- getSeason(seasons)
getSeason <- function(DATES) {
WS <- as.Date("2012-12-15", format = "%Y-%m-%d") # Winter Solstice
SE <- as.Date("2012-3-15",  format = "%Y-%m-%d") # Spring Equinox
SS <- as.Date("2012-6-15",  format = "%Y-%m-%d") # Summer Solstice
FE <- as.Date("2012-9-15",  format = "%Y-%m-%d") # Fall Equinox
# Convert dates from any year to 2012 dates
d <- as.Date(strftime(DATES, format="2012-%m-%d"))
ifelse (d >= WS | d < SE, "Winter",
ifelse (d >= SE & d < SS, "Spring",
ifelse (d >= SS & d < FE, "Summer", "Fall")))
}
seasons <- getSeason(as.Date(nacFLr$Fecha,"%Y-%m-%d")-as.Date("1969-01-01","%Y-%m-%d"))
getSeason <- function(DATES) {
WS <- as.Date("2012-12-15", format = "%Y-%m-%d") # Winter Solstice
SE <- as.Date("2012-3-15",  format = "%Y-%m-%d") # Spring Equinox
SS <- as.Date("2012-6-15",  format = "%Y-%m-%d") # Summer Solstice
FE <- as.Date("2012-9-15",  format = "%Y-%m-%d") # Fall Equinox
# Convert dates from any year to 2012 dates
d <- as.Date(strftime(DATES, format="2012-%m-%d"))
ifelse (d >= WS | d < SE, "Winter",
ifelse (d >= SE & d < SS, "Spring",
ifelse (d >= SS & d < FE, "Summer", "Fall")))
}
seasons <- getSeason(as.Date(nacFLr$Fecha,"%Y-%m-%d"))
getSeason <- function(DATES) {
WS <- as.Date("2012-12-15", format = "%Y-%m-%d") # Winter Solstice
SE <- as.Date("2012-3-15",  format = "%Y-%m-%d") # Spring Equinox
SS <- as.Date("2012-6-15",  format = "%Y-%m-%d") # Summer Solstice
FE <- as.Date("2012-9-15",  format = "%Y-%m-%d") # Fall Equinox
# Convert dates from any year to 2012 dates
d <- as.Date(strftime(DATES, format="2012-%m-%d"))
ifelse (d >= WS | d < SE, "Winter",
ifelse (d >= SE & d < SS, "Spring",
ifelse (d >= SS & d < FE, "Summer", "Fall")))
}
seasons <- getSeason(as.Date(nacFLr$Fecha,"%Y-%m-%d"))
nacFLrd=cbind(nacFLrdl,seasons)
View(nacFLrdl)
View(nacFLrd)
View(nacFLrd)
getSeason <- function(DATES) {
WS <- as.Date("2012-12-15", format = "%Y-%m-%d") # Winter Solstice
SE <- as.Date("2012-3-15",  format = "%Y-%m-%d") # Spring Equinox
SS <- as.Date("2012-6-15",  format = "%Y-%m-%d") # Summer Solstice
FE <- as.Date("2012-9-15",  format = "%Y-%m-%d") # Fall Equinox
# Convierte todos los años a una fecha en 2012
#2012 es un buen año para hacer esto porque es bisiesto
d <- as.Date(strftime(DATES, format="2012-%m-%d"))
ifelse (d >= WS | d < SE, "Winter",
ifelse (d >= SE & d < SS, "Spring",
ifelse (d >= SS & d < FE, "Summer", "Fall")))
}
seasons <- getSeason(as.Date(nacFLr$Fecha,"%Y-%m-%d"))
nacFLrd=cbind(nacFLrdl,seasons)
getSeason <- function(DATES) {
WS <- as.Date("2012-12-15", format = "%Y-%m-%d") # Winter Solstice
SE <- as.Date("2012-3-15",  format = "%Y-%m-%d") # Spring Equinox
SS <- as.Date("2012-6-15",  format = "%Y-%m-%d") # Summer Solstice
FE <- as.Date("2012-9-15",  format = "%Y-%m-%d") # Fall Equinox
# Convierte todos los años a una fecha en 2012
#2012 es un buen año para hacer esto porque es bisiesto
d <- as.Date(strftime(DATES, format="2012-%m-%d"))
ifelse (d >= WS | d < SE, "Winter",
ifelse (d >= SE & d < SS, "Spring",
ifelse (d >= SS & d < FE, "Summer", "Fall")))
}
seasons <- getSeason(as.Date(nacFLr$Fecha,"%Y-%m-%d"))
nacFLrd=cbind(nacFLrdl,seasons)
```{r}
getSeason <- function(DATES) {
WS <- as.Date("2012-12-15", format = "%Y-%m-%d") # Winter Solstice
SE <- as.Date("2012-3-15",  format = "%Y-%m-%d") # Spring Equinox
SS <- as.Date("2012-6-15",  format = "%Y-%m-%d") # Summer Solstice
FE <- as.Date("2012-9-15",  format = "%Y-%m-%d") # Fall Equinox
# Convierte todos los años a una fecha en 2012
#2012 es un buen año para hacer esto porque es bisiesto
d <- as.Date(strftime(DATES, format="2012-%m-%d"))
ifelse (d >= WS | d < SE, "Winter",
ifelse (d >= SE & d < SS, "Spring",
ifelse (d >= SS & d < FE, "Summer", "Fall")))
}
seasons <- getSeason(as.Date(nacFLr$Fecha,"%Y-%m-%d"))
nacFLrd=cbind(nacFLrdl,seasons)
plot(nacFLrdl$seasons, nacFLrdl$Numero_de_nacimientos)
getSeason <- function(DATES) {
WS <- as.Date("2012-12-15", format = "%Y-%m-%d") # Winter Solstice
SE <- as.Date("2012-3-15",  format = "%Y-%m-%d") # Spring Equinox
SS <- as.Date("2012-6-15",  format = "%Y-%m-%d") # Summer Solstice
FE <- as.Date("2012-9-15",  format = "%Y-%m-%d") # Fall Equinox
# Convierte todos los años a una fecha en 2012
#2012 es un buen año para hacer esto porque es bisiesto
d <- as.Date(strftime(DATES, format="2012-%m-%d"))
ifelse (d >= WS | d < SE, "Winter",
ifelse (d >= SE & d < SS, "Spring",
ifelse (d >= SS & d < FE, "Summer", "Fall")))
}
seasons <- getSeason(as.Date(nacFLr$Fecha,"%Y-%m-%d"))
nacFLrd=cbind(nacFLrdl,seasons)
plot(nacFLrd$seasons, nacFLrd$Numero_de_nacimientos)
getSeason <- function(DATES) {
WS <- as.Date("2012-12-15", format = "%Y-%m-%d") # Winter Solstice
SE <- as.Date("2012-3-15",  format = "%Y-%m-%d") # Spring Equinox
SS <- as.Date("2012-6-15",  format = "%Y-%m-%d") # Summer Solstice
FE <- as.Date("2012-9-15",  format = "%Y-%m-%d") # Fall Equinox
# Convierte todos los años a una fecha en 2012
#2012 es un buen año para hacer esto porque es bisiesto
d <- as.Date(strftime(DATES, format="2012-%m-%d"))
ifelse (d >= WS | d < SE, 1, #1 = Winter
ifelse (d >= SE & d < SS, 2,#2 = Spring
ifelse (d >= SS & d < FE, 3, 4))) #3 = Summer, 4 = Fall
}
seasons <- getSeason(as.Date(nacFLr$Fecha,"%Y-%m-%d"))
nacFLrd=cbind(nacFLrdl,seasons)
plot(nacFLrd$seasons, nacFLrd$Numero_de_nacimientos)
abline(lm(nacFLrd$Numero_de_nacimientos~nacFLrd$seasons))
Pearson = cor(nacFLrd$Numero_de_nacimientos,nacFLrd$seasons)
Pearson
getSeason <- function(DATES) {
WS <- as.Date("2012-12-15", format = "%Y-%m-%d") # Winter Solstice
SE <- as.Date("2012-3-15",  format = "%Y-%m-%d") # Spring Equinox
SS <- as.Date("2012-6-15",  format = "%Y-%m-%d") # Summer Solstice
FE <- as.Date("2012-9-15",  format = "%Y-%m-%d") # Fall Equinox
# Convierte todos los años a una fecha en 2012
#2012 es un buen año para hacer esto porque es bisiesto
d <- as.Date(strftime(DATES, format="2012-%m-%d"))
ifelse (d >= WS | d < SE, 1, #1 = Winter
ifelse (d >= SE & d < SS, 2,#2 = Spring
ifelse (d >= SS & d < FE, 3, 4))) #3 = Summer, 4 = Fall
}
seasons <- getSeason(as.Date(nacFLr$Fecha,"%Y-%m-%d"))
nacFLrd=cbind(nacFLrdl,seasons)
barplot(nacFLrd$seasons, nacFLrd$Numero_de_nacimientos)
abline(lm(nacFLrd$Numero_de_nacimientos~nacFLrd$seasons))
getSeason <- function(DATES) {
WS <- as.Date("2012-12-15", format = "%Y-%m-%d") # Winter Solstice
SE <- as.Date("2012-3-15",  format = "%Y-%m-%d") # Spring Equinox
SS <- as.Date("2012-6-15",  format = "%Y-%m-%d") # Summer Solstice
FE <- as.Date("2012-9-15",  format = "%Y-%m-%d") # Fall Equinox
# Convierte todos los años a una fecha en 2012
#2012 es un buen año para hacer esto porque es bisiesto
d <- as.Date(strftime(DATES, format="2012-%m-%d"))
ifelse (d >= WS | d < SE, 1, #1 = Winter
ifelse (d >= SE & d < SS, 2,#2 = Spring
ifelse (d >= SS & d < FE, 3, 4))) #3 = Summer, 4 = Fall
}
seasons <- getSeason(as.Date(nacFLr$Fecha,"%Y-%m-%d"))
nacFLrd=cbind(nacFLrdl,seasons)
hist(nacFLrd$seasons, nacFLrd$Numero_de_nacimientos)
getSeason <- function(DATES) {
WS <- as.Date("2012-12-15", format = "%Y-%m-%d") # Winter Solstice
SE <- as.Date("2012-3-15",  format = "%Y-%m-%d") # Spring Equinox
SS <- as.Date("2012-6-15",  format = "%Y-%m-%d") # Summer Solstice
FE <- as.Date("2012-9-15",  format = "%Y-%m-%d") # Fall Equinox
# Convierte todos los años a una fecha en 2012
#2012 es un buen año para hacer esto porque es bisiesto
d <- as.Date(strftime(DATES, format="2012-%m-%d"))
ifelse (d >= WS | d < SE, 1, #1 = Winter
ifelse (d >= SE & d < SS, 2,#2 = Spring
ifelse (d >= SS & d < FE, 3, 4))) #3 = Summer, 4 = Fall
}
seasons <- getSeason(as.Date(nacFLr$Fecha,"%Y-%m-%d"))
nacFLrd=cbind(nacFLrdl,seasons)
barplot(nacFLrd$seasons, nacFLrd$Numero_de_nacimientos)
abline(lm(nacFLrd$Numero_de_nacimientos~nacFLrd$seasons))
getSeason <- function(DATES) {
WS <- as.Date("2012-12-15", format = "%Y-%m-%d") # Winter Solstice
SE <- as.Date("2012-3-15",  format = "%Y-%m-%d") # Spring Equinox
SS <- as.Date("2012-6-15",  format = "%Y-%m-%d") # Summer Solstice
FE <- as.Date("2012-9-15",  format = "%Y-%m-%d") # Fall Equinox
# Convierte todos los años a una fecha en 2012
#2012 es un buen año para hacer esto porque es bisiesto
d <- as.Date(strftime(DATES, format="2012-%m-%d"))
ifelse (d >= WS | d < SE, 1, #1 = Winter
ifelse (d >= SE & d < SS, 2,#2 = Spring
ifelse (d >= SS & d < FE, 3, 4))) #3 = Summer, 4 = Fall
}
seasons <- getSeason(as.Date(nacFLr$Fecha,"%Y-%m-%d"))
nacFLrd=cbind(nacFLrdl,seasons)
plot(nacFLrd$seasons, nacFLrd$Numero_de_nacimientos)
abline(lm(nacFLrd$Numero_de_nacimientos~nacFLrd$seasons))
acumdcl=1:30
for(i in 1:30){acumdcl[i]=sum(nacFLrd$Numero_de_nacimientos[which(nacFLrd$seasons==i-1)])}
barplot(acumdcl)
